name: .NET
defaults:
  run:
    shell: pwsh

on:
  push:
    branches: [ master ]
    paths:
      - .github/workflows/*
      - src/**/*
      - tests/**/*
  
  pull_request:
    branches: [ master ]
    types:
      - opened
      - reopened
      - synchronize
      - closed
  
  workflow_dispatch:
    
    inputs:
      
      versionSuffix:
        required: false
        description: "Version suffix for nupkg"
      
      publishRelease:
        required: true
        type: boolean
        description: "Nuget release?"
        default: false
      
      configuration:
        required: false
        default: Release
        type: choice
        options:
          - Debug
          - Release
      
      verbosity:
        required: false
        default: minimal
        type: choice
        options:
          - quiet
          - minimal
          - normal
          - detailed
          - diagnostic

jobs:
  environment:
    runs-on: ubuntu-latest
    
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: false
    
    outputs:
      versionSuffix: ${{ steps.defaults.outputs.versionSuffix }}
      verbosity: ${{ steps.defaults.outputs.verbosity }}
      configuration: ${{ steps.defaults.outputs.configuration }}
      publishRelease: ${{ steps.defaults.outputs.publishRelease }}

    steps:

      - name: Git Information
        shell: bash
        run: |
          echo "head: $GITHUB_HEAD_REF"
          echo "base: $GITHUB_BASE_REF"
          echo "base: $GITHUB_REF"

      - name: declare default values
        id: defaults
        shell: pwsh
        run: |
          $suffixMap = @{
              "push"="alpha.${{github.run_number}}"; 
              "pull_request"="beta.${{github.run_number}}"; 
              "workflow_dispatch"="${{github.event.inputs.versionSuffix}}"
          };
          $suffix = $($suffixMap['${{github.event_name}}'])
          if( $suffixMap['workflow_dispatch'] -ne '' -and '${{github.event_name}}' -eq 'workflow_dispatch'){
              $suffix = $($suffix.TrimEnd('.') + ".")
              $suffix = "$($suffix)${{github.run_number}}"
          }  
          
          #   key name                workflow value                                  fallback value
          $values = @(
              @("versionSuffix",      "$suffix",                                      "$suffix"),
              @("configuration",      "${{github.event.inputs.configuration}}",       "Release"),
              @("verbosity",          "${{github.event.inputs.verbosity}}",           "minimal"),
              @("publishRelease",     "${{github.event.inputs.publishRelease}}",      "true")
          );

          $manual = $('${{github.event_name}}' -eq 'workflow_dispatch')
          foreach($pair in $values){
              $value = $pair[2]
              if($manual -eq $true){
                  $value = $pair[1]
              }

              Write-Host "Setting parameter $($pair[0]) => $value"
              echo "$($pair[0])=$value" >> $env:GITHUB_OUTPUT
          }   
  
  build:
    if: true
    runs-on: ubuntu-latest
    needs: environment

    steps:
      - name: Dump environment outputs
        shell: bash
        run: |
          echo "${{ toJson( needs.environment.outputs) }}" > env_outputs.json
          echo "${{ toJson( github) }}" > env_outputs.json
        
      - name: Display environment outputs
        shell: bash
        run: cat env_outputs.json
      - name: stop
        run: exit 1
      
      - uses: actions/checkout@v4.1.7
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore src/All.sln
      - name: Build
        run: dotnet build src/All.sln --no-restore --verbosity ${{ needs.environment.outputs.verbosity }} -c ${{ needs.environment.outputs.configuration }}
      - name: Test
        run: dotnet test src/All.sln --no-build --verbosity ${{ needs.environment.outputs.verbosity }} -c ${{ needs.environment.outputs.configuration }} --filter Category!=SkipInCI
      - name: Pack      
        run: dotnet pack src/Amusoft.Templates/Amusoft.Templates.csproj -o "artifacts/nupkg" --no-build --verbosity ${{ needs.environment.outputs.verbosity }} -c ${{ needs.environment.outputs.configuration }} /p:VersionSuffix=${{ needs.environment.outputs.versionSuffix}}
      - name: Inspect path
        shell: pwsh        
        run: Get-ChildItem -Path "artifacts/nupkg" 

      - name: Release
        run: dotnet nuget push "artifacts/nupkg/*.nupkg" -k $env:NUGETKEY -s https://api.nuget.org/v3/index.json
        shell: pwsh
        if: ${{ needs.environment.outputs.publishRelease == 'true' && ( github.event.pull_request.merged || github.event_name == 'workflow_call' ) }}
        env:
          NUGETKEY: ${{ secrets.NUGET }}
